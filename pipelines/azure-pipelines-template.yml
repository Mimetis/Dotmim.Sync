parameters:
- name: displayName
  default: 'Integration Tests'
- name: dotnetfx  # defaults for any parameters that aren't specified
  default: 'net8.0'
- name: filter
  default: 'Dotmim.Sync.Tests.IntegrationTests2.SqlServerTcp'
- name: docker
  default: 'sqlserver'

jobs:

  - job: 
    displayName: ${{ parameters.displayName }}

    pool:
      vmImage: "ubuntu-latest"

    variables:
      solution: "**/*.sln"
      buildPlatform: "Any CPU"
      buildConfiguration: "Release"

    steps:
      - script: mkdir -p $(Pipeline.Workspace)/.nuget/packages
        displayName: 'Ensure NuGet packages directory exists'

      - task: Cache@2
        inputs:
          key: 'nuget | "$(Agent.OS)" | **/packages.lock.json,!**/bin/**,!**/obj/**'
          restoreKeys: |
            nuget | "$(Agent.OS)"
            nuget
          path: $(Pipeline.Workspace)/.nuget/packages
          cacheHitVar: 'CACHE_RESTORED'
        displayName: Cache NuGet packages

      - task: UseDotNet@2
        displayName: 'Use .Net Core 3.1'
        inputs:
          version: 3.x
        condition: eq('${{ parameters.dotnetfx }}', 'netcoreapp3.1')

      - task: UseDotNet@2
        displayName: 'Use .Net Sdk 6.x'
        inputs:
          packageType: 'sdk'
          version: 6.0.x
        condition: eq('${{ parameters.dotnetfx }}', 'net6.0')

      - task: UseDotNet@2
        displayName: 'Use .Net Sdk 8.x'
        inputs:
          packageType: 'sdk'
          version: 8.0.x
        condition: in('${{ parameters.dotnetfx }}', 'netcoreapp3.1', 'net8.0')

      - script: docker run --name sqlserver -e ACCEPT_EULA=Y -e SA_PASSWORD=Password12! -p 1433:1433 -d mcr.microsoft.com/mssql/server
        displayName: "Run SQL Server latest on Linux container"
        condition: eq('${{ parameters.docker }}', 'sqlserver')

      - script: docker run --name mysql -e MYSQL_ROOT_PASSWORD=Password12! -p 3307:3306 -d mysql
        displayName: "Run MySql on Linux container"
        condition: eq('${{ parameters.docker }}', 'mysql')

      - script: docker run --name mariadb -e MYSQL_ROOT_PASSWORD=Password12! -p 3308:3306 -d mariadb:latest
        displayName: "Run MariaDB on Linux container"
        condition: eq('${{ parameters.docker }}', 'mariadb')

      - script: docker run --name postgres -e POSTGRES_PASSWORD=Password12! -p 5432:5432 -d postgres:latest
        displayName: "Run PostgreSQL on Linux container"
        condition: eq('${{ parameters.docker }}', 'postgres')

      - script: dotnet restore
        displayName: 'Restore dependencies'

      - script: dotnet test Tests/Dotmim.Sync.Tests/Dotmim.Sync.Tests.csproj --filter ${{ parameters.filter }} -f ${{ parameters.dotnetfx }} --logger trx --no-restore
        name: tests
        displayName: ${{ parameters.displayName }}
        env:
          "AZUREDEV": "true"

      - task: PublishTestResults@2
        inputs:
          testRunner: VSTest
          testResultsFiles: "**/*.trx"
        condition: succeededOrFailed()