# .NET Desktop
# Build and run tests for .NET Desktop or Windows classic desktop solutions.
# Add steps that publish symbols, save build artifacts, and more:
# https://docs.microsoft.com/vsts/pipelines/apps/windows/dot-net

jobs:

- job: Win2016
  pool:
    vmImage: 'VS2017-Win2016'
  steps:
  - task: Docker@0
    displayName: 'Start SQL Server 2017'
    inputs:
      action: 'Run an image'
      imageName: microsoft/mssql-server-windows-developer
      command: 'run'
      ports: '1433:1433'
      envVars: 'ACCEPT_EULA=Y SA_PASSWORD=yourStrong(!)Password'
  
  - script: dotnet build Projects/Dotmim.Sync.Core/Dotmim.Sync.Core.csproj
    displayName: 'Dotmim.Sync.Core'
  - script: dotnet build Projects/Dotmim.Sync.SqlServer/Dotmim.Sync.SqlServer.csproj
    displayName: 'Dotmim.Sync.SqlServer'
  - script: dotnet build Projects/Dotmim.Sync.Sqlite/Dotmim.Sync.Sqlite.csproj
    displayName: 'Dotmim.Sync.Sqlite'
  - script: dotnet build Projects/Dotmim.Sync.MySql/Dotmim.Sync.MySql.csproj
    displayName: 'Dotmim.Sync.MySql'
  - script: dotnet build Projects/Dotmim.Sync.Web.Client/Dotmim.Sync.Web.Client.csproj
    displayName: 'Dotmim.Sync.Web.Client'
  - script: dotnet build Projects/Dotmim.Sync.Web.Server/Dotmim.Sync.Web.Server.csproj
    displayName: 'Dotmim.Sync.Web.Server'
  - script: dotnet build Projects/dotnet-sync/dotnet-sync.csproj
    displayName: 'dotnet-sync'





#pool:
#  vmImage: 'Ubuntu 16.04' # 'VS2017-Win2016'
#
#variables:
#  solution: '**/*.sln'
#  buildPlatform: 'Any CPU'
#  buildConfiguration: 'Release'
#
#steps:
#- task: NuGetToolInstaller@0
#
#- task: NuGetCommand@2
#  inputs:
#    restoreSolution: '$(solution)'
#
#- task: VSBuild@1
#  inputs:
#    solution: '$(solution)'
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'

#- task: Docker@0
#  displayName: 'Start SQL Server 2017'
#  inputs:
#    action: 'Run an image'
#    imageName: microsoft/mssql-server-linux:2017-latest
#    command: 'run'
#    ports: '1433:1433'
#    envVars: 'ACCEPT_EULA=Y SA_PASSWORD=yourStrong(!)Password'
#    
#- script: dotnet build Projects/Dotmim.Sync.Core/Dotmim.Sync.Core.csproj
#- script: dotnet build Projects/Dotmim.Sync.SqlServer/Dotmim.Sync.SqlServer.csproj
#- script: dotnet build Projects/Dotmim.Sync.Sqlite/Dotmim.Sync.Sqlite.csproj
#- script: dotnet build Projects/Dotmim.Sync.MySql/Dotmim.Sync.MySql.csproj
#- script: dotnet build Projects/Dotmim.Sync.Web.Client/Dotmim.Sync.Web.Client.csproj
#- script: dotnet build Projects/Dotmim.Sync.Web.Server/Dotmim.Sync.Web.Server.csproj
#- script: dotnet build Projects/dotnet-sync/dotnet-sync.csproj

#- task: VSTest@2
#  inputs:
#    platform: '$(buildPlatform)'
#    configuration: '$(buildConfiguration)'
